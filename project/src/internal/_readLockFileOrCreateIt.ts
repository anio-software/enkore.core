import {
	type EnkoreLockFile,
	type ToolchainSpecifiers,
	readEntityJSONFile,
	createEntity
} from "@anio-software/enkore-private.spec"
import {getEnkoreLockFilePath} from "./paths/getEnkoreLockFilePath.ts"
import {isFileSync, writeAtomicFileJSON} from "@anio-software/pkg.node-fs"
import {log} from "@anio-software/enkore-private.debug"

export async function _readLockFileOrCreateIt(
	projectRoot: string,
	toolchain: ToolchainSpecifiers
): Promise<EnkoreLockFile> {
	log("_readLockFileOrCreateIt called")

	const lockfilePath = getEnkoreLockFilePath(projectRoot)

	//
	// i know this is racy
	// (checking and then creating the file if it doesn't exist)
	//
	if (isFileSync(lockfilePath)) {
		log(`enkore-lock.json file exists`)

		return await readEntityJSONFile(
			lockfilePath, "EnkoreLockFile", 0, 0
		)
	}

	const lockfileData = createEntity("EnkoreLockFile", 0, 0, {
		toolchain,
		autogeneratedFiles: {}
	})

	await writeAtomicFileJSON(lockfilePath, lockfileData, {pretty: true})

	log(`i have created an empty enkore-lock.json file`)

	return lockfileData
}
