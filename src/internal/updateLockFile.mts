import {
	type EnkoreConfig,
	type EnkoreLockFile
} from "@enkore/spec"
import type {InstalledDependency} from "./installTargetDependencies/InstalledDependency.d.mts"
import {readLockFile} from "./readLockFile.mts"
import {_writeLockFile} from "./_writeLockFile.mts"
import {_debugPrint} from "./_debugPrint.mts"

export async function updateLockFile(
	projectRoot: string,
	projectConfig: EnkoreConfig,
	installedDependencies: InstalledDependency[],
	targetDependenciesStamp: string
) {
	_debugPrint("updateLockFile called")

	//
	// we presume the enkore-lock.json file exists here
	// it should have been created by initializeProject() if it
	// didn't exist before (NB: only in non-CI mode)
	//
	const currentLockFileData = await readLockFile(projectRoot)

	let targetDependencies : EnkoreLockFile["targetDependencies"] = {}

	for (const dependency of installedDependencies) {
		targetDependencies[dependency.name] = {
			version: dependency.version,
			requestedVersion: dependency.requestedVersion
		}
	}

	await _writeLockFile(projectRoot, {
		targetIdentifier: projectConfig.target._targetIdentifier,
		autogeneratedFiles: currentLockFileData.autogeneratedFiles,
		targetDependencies,
		targetDependenciesStamp
	})
}
